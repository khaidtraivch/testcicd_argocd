# stages:
#   - sonar_scan

# variables:
#   SONAR_HOST_URL: "http://sonarqube:9000"

# sonar_scan:
#   stage: sonar_scan
#   image: sonarsource/sonar-scanner-cli:latest
#   script:
#     - |
#       sonar-scanner \
#         -Dsonar.projectKey=khainx106_flaskbase_main \
#         -Dsonar.projectName="FlaskBase CI" \
#         -Dsonar.sources=. \
#         -Dsonar.host.url=$SONAR_HOST_URL \
#         -Dsonar.login=$SONAR_TOKEN
#   only:
#     - main
#     - develop
#     - merge_requests

sonar_scan:
  stage: sonar_scan
  image: your/custom-sonar-image:latest
  script:
    - |
      ce_task_id=$(curl -s -u "$SONAR_TOKEN:" "$SONAR_HOST_URL/api/ce/component?component=khainx106_flaskbase_main" | jq -r '.queue[0].id')

      echo ">>> Đợi kết quả Quality Gate..."

      for i in $(seq 1 10); do
        task_status=$(curl -s -u "$SONAR_TOKEN:" "$SONAR_HOST_URL/api/ce/task?id=$ce_task_id" | jq -r '.task.status')
        echo "Trạng thái xử lý: $task_status"
        if [ "$task_status" = "SUCCESS" ]; then
          break
        fi
        sleep 5
      done

      qg_status=$(curl -s -u "$SONAR_TOKEN:" "$SONAR_HOST_URL/api/qualitygates/project_status?projectKey=khainx106_flaskbase_main" | jq -r '.projectStatus.status')
      echo "Quality Gate: $qg_status"

      if [ "$qg_status" != "OK" ] && [ "$qg_status" != "Passed" ]; then
        echo "Chất lượng code không đạt yêu cầu."
        exit 1
      fi
