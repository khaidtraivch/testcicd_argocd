stages:
  - build
  - deploy

variables:
  IMAGE_NAME: khainxphuthai/todolist_ver1.1
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2

build:
  stage: build
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - docker info
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin
    - docker build -t $IMAGE_NAME:$CI_COMMIT_SHORT_SHA .
    - docker push $IMAGE_NAME:$CI_COMMIT_SHORT_SHA

deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh python3 py3-pip
    - mkdir -p ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts
  script:
    - echo "🔒 Testing SSH connection..."
    - ssh -o StrictHostKeyChecking=no -o ConnectTimeout=10 ubuntu@$EC2_HOST "echo '✅ SSH connection successful'"

    - echo "🚀 Deploying Docker container..."
    - |
      ssh ubuntu@$EC2_HOST <<EOF
        set -e
        cd ~/flaskbase_ci_deploy
        docker pull $IMAGE_NAME:$CI_COMMIT_SHORT_SHA
        docker compose down || true
        docker compose up -d
        echo "✅ Deploy complete"
      EOF

    - echo "📁 Checking if send_email.py exists locally..."
    - |
      if [ -f "send_email.py" ]; then
        echo "📤 Copying send_email.py..."
        scp -v send_email.py ubuntu@$EC2_HOST:/home/ubuntu/ || echo "❌ SCP failed"
        ssh ubuntu@$EC2_HOST "python3 /home/ubuntu/send_email.py" || echo "❌ Failed to run send_email.py"
      else
        echo "⚠️ send_email.py not found. Skipping email sending."
      fi
  only:
    - main
